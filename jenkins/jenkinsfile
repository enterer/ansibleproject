pipeline {
    agent any

    environment {
        ARTIFACT_NAME = "app.tar.gz"
        HASH_FILE = "hash.txt"
    }

    stages {
        stage('Checkout Source') {
            steps {
                git branch: 'dev', url: 'https://github.com/enterer/ansibleproject.git'
            }
        }

        stage('Package Flask App') {
            steps {
                sh '''
                cd app
                tar -czvf $ARTIFACT_NAME app.py requirements.txt templates/ init_db.js
                sha256sum $ARTIFACT_NAME > $HASH_FILE
                '''
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: "app/$ARTIFACT_NAME, app/$HASH_FILE", fingerprint: true
            }
        }

        stage('Deploy with Ansible') {
            steps {
                sh '''
                cd ansible
                ansible-playbook -i inventory.ini site.yml
                '''
            }
        }
    }

    post {
        always {
            script {
                def slackMessage = """
                {
                  "text": "ðŸ”” *Pipeline Status*: ${currentBuild.currentResult} ðŸš€\\n*Job*: ${env.JOB_NAME}\\n*Build*: #${env.BUILD_NUMBER}\\nðŸ”— ${env.BUILD_URL}"
                }
                """

                withCredentials([string(credentialsId: 'SLACK_WEBHOOK_URL', variable: 'SLACK_WEBHOOK')]) {
                    httpRequest httpMode: 'POST',
                                url: "${SLACK_WEBHOOK}",
                                contentType: 'APPLICATION_JSON',
                                requestBody: slackMessage
            }
        }
    }
}
